# Copyright (c) 2020 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

version: '3.6'
services:
## Define Analytics service
  python_safety_gear_analytics:
    depends_on:
      - ia_video_analytics
    build:
      context: $PWD/../CustomUdfs/PySafetyGearAnalytics
      dockerfile: $PWD/../CustomUdfs/PySafetyGearAnalytics/Dockerfile
      args:
        EIS_VERSION: ${EIS_VERSION}
        EIS_UID: ${EIS_UID}
        EIS_USER_NAME: ${EIS_USER_NAME}
        DOCKER_REGISTRY: ${DOCKER_REGISTRY}
        # set CMAKE_BUILD_TYPE value to "Debug" to generate debug symbols
        CMAKE_BUILD_TYPE: "Release"
        RUN_TESTS: "OFF"
    image: ${DOCKER_REGISTRY}python_safety_gear_analytics:${EIS_VERSION}
    container_name: python_safety_gear_analytics
    hostname: python_safety_gear_analytics
    network_mode: host
    restart: unless-stopped
    ipc: "none"
    environment:
      AppName: "PySafetyGearAnalytics"
      DEV_MODE: ${DEV_MODE}
      PROFILING_MODE: ${PROFILING_MODE}
      no_proxy: ${eis_no_proxy},${ETCD_HOST}
      ETCD_HOST: ${ETCD_HOST}
      ETCD_PREFIX: ${ETCD_PREFIX}

      # MessageBus Endpoint Configuration
      Clients : "Visualizer,FactoryControlApp,OpcuaExport,ImageStore,InfluxDBConnector,RestDataExport,WebVisualizer,TLSRemoteAgent"
      CertType: "zmq"
      ZMQ_RECV_HWM: "50"

      # Use IPC mode (zmq_ipc) when Ingestion and Analytics
      # containers are running on the same host. If they are running on diff
      # host, please use TCP mode for communication.
      # Eg: Stream cfg for
      # IPC: zmq_ipc, <absolute_socket_directory_path>
      # TCP: zmq_tcp, <publisher_host>:<publisher_port>
      SubTopics: "PySafetyGearIngestion/py_safetygear_stream"
      py_safetygear_stream_cfg: "zmq_ipc,${SOCKET_DIR}/"
      PubTopics: "py_safety_gear_stream_results"
      py_safety_gear_stream_results_cfg: "zmq_tcp,127.0.0.1:67019"
      #camera1_stream_results_cfg: "zmq_ipc,${SOCKET_DIR}/"
    privileged: true
    volumes:
      - "/var/tmp:/var/tmp"
      - "/dev:/dev"
      - "vol_eis_socket:${SOCKET_DIR}"
      # Please uncomment the below volume mapping if the FPGA need to be used.
      #- "/opt/Intel/OpenCL/Boards:/opt/Intel/OpenCL/Boards"
      #- "/opt/altera:/opt/altera"
      #- "/opt/intel/intelFPGA:/opt/intel/intelFPGA"
    devices:
      - "/dev/:/dev/"
      # Following devices under /dev filesystem will be needed based on usecase
    secrets:
      - ca_etcd
      - etcd_PySafetyGearAnalytics_cert
      - etcd_PySafetyGearAnalytics_key

secrets:
  etcd_PySafetyGearAnalytics_cert:
    file: provision/Certificates/PySafetyGearAnalytics/PySafetyGearAnalytics_client_certificate.pem
  etcd_PySafetyGearAnalytics_key:
    file: provision/Certificates/PySafetyGearAnalytics/PySafetyGearAnalytics_client_key.pem
